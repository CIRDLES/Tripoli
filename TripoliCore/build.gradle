/*
 * Copyright 2022 James Bowring, Noah McLean, Scott Burdick, and CIRDLES.org.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import org.apache.tools.ant.filters.ReplaceTokens

import java.text.SimpleDateFormat

plugins {
    id 'java'
    id 'java-library'
    id "de.jjohannes.extra-java-module-info" version "0.11"
}

repositories {
    maven {url "https://plugins.gradle.org/m2/"}
}

dependencies {
    implementation "com.github.cirdles:commons:bc38781605"

    // https://mvnrepository.com/artifact/org.apache.commons/commons-math3
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    // https://mvnrepository.com/artifact/com.zaxxer/SparseBitSet
    implementation group: 'com.zaxxer', name: 'SparseBitSet', version: '1.2'
    // https://mvnrepository.com/artifact/org.apache.poi/poi
    implementation group: 'org.apache.poi', name: 'poi', version: '5.0.0'

    // https://mvnrepository.com/artifact/gov.nist.math/jama
    //implementation group: 'gov.nist.math', name: 'jama', version: '1.0.3'
    // modernized update: https://github.com/topobyte/jama
    implementation 'com.github.topobyte:jama:master-SNAPSHOT'

    implementation group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.19'

    testImplementation "com.github.cirdles:commons:bc38781605"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

extraJavaModuleInfo {
    failOnMissingModuleInfo.set(false)
    automaticModule('commons-bc38781605.jar', 'commons.bc38781605')
    automaticModule('org.apache.commons-math3-3.6.1.jar', 'org.apache.commons-math3')
    automaticModule('com.zaxxer.SparseBitSet-1.2.jar', 'com.zaxxer.SparseBitSet')
    automaticModule('jama-master-SNAPSHOT.jar', 'jama')
}

test {
    useJUnitPlatform()
}

def timestamp() {
    new SimpleDateFormat("dd MMMM yyyy").format(new Date())
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
        include '**/*.txt'
        filter ReplaceTokens, tokens: [
                "pom.version": version,
                "timestamp"  : timestamp()
        ]
    }
}